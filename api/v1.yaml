openapi: 3.0.0
servers:
  - description: SwaggerHub API Auto Mocking
    url: 'https://virtserver.swaggerhub.com/one-catalogue/oc-ingest-api/v1.0.0'
info:
  description: Gateway for messaging system for one-catalogue
  version: "v1.0.0"
  title: MVP data structure
  contact:
    email: oldrich.taufer@heureka.cz
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: developers
    description: Operations available to regular developers
paths:
  /categories:
    post:
      parameters:
        - in: header
          name: uuid
          schema:
            $ref: '#/components/schemas/uuid'
      tags:
        - developers
      summary: adds or update category
      operationId: addCategory
      description: Adds category to the system
      responses: 
        200:
          $ref: '#/components/responses/200'
        422:
         $ref: '#/components/responses/422'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryItem'
        description: Category scheme
  '/parameters':
    post:
      parameters:
        - in: header
          name: uuid
          schema:
            $ref: '#/components/schemas/uuid'
      tags:
        - developers
      summary: adds or update parameters
      operationId: addParameter
      description: Adds parameter to the system
      responses: 
        200:
          $ref: '#/components/responses/200'
        422:
         $ref: '#/components/responses/422'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameter'
        description: Category parameters scheme
  '/producers':
    post:
      parameters:
        - in: header
          name: uuid
          schema:
            $ref: '#/components/schemas/uuid'
      tags:
        - developers
      summary: adds or update producer
      operationId: addProducer
      description: Adds producer to the system
      responses: 
        200:
          $ref: '#/components/responses/200'
        422:
         $ref: '#/components/responses/422'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Producer'
        description: Producer scheme
  '/products':
    post:
      parameters:
        - in: header
          name: uuid
          schema:
            $ref: '#/components/schemas/uuid'
      tags:
        - developers
      summary: adds or update product
      operationId: addProduct
      description: Adds product to the system
      responses: 
        200:
          $ref: '#/components/responses/200'
        422:
         $ref: '#/components/responses/422'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        description: Product scheme
  '/parameter-values':
    post:
      parameters:
        - in: header
          name: uuid
          schema:
            $ref: '#/components/schemas/uuid'
      tags:
        - developers
      summary: adds or update value of product parameter
      operationId: addParameterValue
      description: Adds product parameters value to the system
      responses: 
        200:
          $ref: '#/components/responses/200'
        422:
         $ref: '#/components/responses/422'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParameterValue'
        description: Product parameters scheme
components:
  headers:
    UUIDHeader:
      schema:
        $ref: '#/components/schemas/uuid'
    VersionHeader:
      schema:
        $ref: '#/components/schemas/version'
  schemas:
    ParameterValue:
      type: array
      items:
        type: object
        required:
          - id
          - value
          - parameterId
        properties:
          id:
            type: string
            example: "1"
          value:
            type: string
            example: "red"
          parameterId:
            type: string
            example: "1"
    Product:
      type: array
      items: 
        type: object
        required:
          - id
          - name
          - categoryId
          - active
          - description
          - params
        properties:
          id:
            type: string
            example: '859'
          name:
            type: string
            example: 'Koss TD85'
          categoryId:
            type: string
            example: '709'
          active:
            type: boolean
            example: True
          description:
            type: string
            example: "Zachyťte každou notu a poslouchejte oblíbenou hudbu nahlas, bez rušení okolí. Sluchátka KOSS TD85 mají dokonalou izolaci zvuku, a tak nikdo neslyší, co vlastně posloucháte. Díky této těsnosti vás také neruší žádný okolní zvuk. Sluchátka můžete vzít kamkoliv, i do velmi rušného prostředí a přesto si vychutnáte dokonalý zvuk a poslech každého tónu."
          params:
            type: array
            items:
              type: string
            example: ["1", "2_3", "800"]
    Producer:
      type: array
      items:
        type: object
        required:
         - id
         - name
        properties:
          id:
            type: string
            example: "1"
          name:
            type: string
            example: "Mall"
    Parameter:
      type: array
      items:
        type: object
        required:
          - id
          - value
          - type
        properties:
          id:
            type: string
            example: "1"
          value:
            type: string
            example: "colour"
          type:
            type: string
            enum: [string, integer, range]
            example: "string"
    CategoryItem:
      type: array
      items:
        type: object
        required:
          - id
          - type
          - name
          - seoName
          - restricted
          - erotic
          - parentId
          - categoryParametersIds
          - active
        properties:
          id:
            type: string
            example: "4299"
          type:
            type: string
            enum: [attribute, category]
            example: category
          name:
            type: string
            example: 'Elektrické vertikutátory'
          keywords:
            type: array
            items:
              type: string
            example: ["Elektrické vertikutátory", "Elektrický vertikutátor", "Dům a zahrada", "Zahrada"]
          seoName:
            type: string
            example: 'elektricke-vertikulatory'
          restricted:
            type: boolean
            example: False
          erotic:
            type: boolean
            example: False
          parentId:
            type: string
            example: "352"
          categoryParametersIds:
            type: array
            items:
              type: string
            example: ["1", "2", "6", "80"]
          active:
            type: boolean
            example: True
    SuccessResponse:
      type: object
      properties:
        message:
          type: string
          description: Success response
          example: "Success"
    ValidationError:
      type: object
      properties:
        errors:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  example: "666"
                first_bad_parameter:
                  type: string
                  example: ["id must be number", "id must be greater then 0"]
                second_bad_parameter:
                  type: string
                  example: ["name must be string"]
    uuid:
      type: string
      format: uuid
      example: d290f1ee-6c54-4b01-90e6-d701748f0851
    version:
      type: string
      example: "1.0.0"
  responses:
    '200':
          description: 'Success'
          headers:
            uuid:
              $ref: '#/components/headers/UUIDHeader'
            version:
              $ref: '#/components/headers/VersionHeader'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
    '422':
      description: 'Validation error'
      headers:
        uuid:
          $ref: '#/components/headers/UUIDHeader'
        version:
          $ref: '#/components/headers/VersionHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'